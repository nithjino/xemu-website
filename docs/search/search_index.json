{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"about/","text":"xemu is a free and open-source application that emulates the original Microsoft Xbox game console, enabling people to play their original Xbox games on Windows, macOS, and Linux systems. xemu is maintained and developed by Matt Borgerson. xemu is a continuation of the XQEMU project, originally started by espes in 2011 with significant contributions from Matt Borgerson (mborgerson), Jannik Vogel (JayFoxRox), and others. xemu is based on the excellent QEMU full system emulator project. Disclaimer This project is for educational purposes only, with the goal of researching and understanding the inner-workings of the original Xbox and its games, and then building a platform to play those legally purchased games. This project does not endorse or promote copyright infringement of any kind. Developers work with legal backups of their own physical media and encourage all users to do the same. Piracy is not tolerated on any communication channel. System Requirements \u00b6 xemu runs on Windows, macOS, and Linux systems. An OpenGL 4.0-compatible GPU is required. Most recent integrated GPUs will work. Please note that xemu is an evolving project and, although xemu can run on large number of systems, actual game performance is in flux and will vary based on the characteristics of your system. Open Source Development \u00b6 xemu is developed on GitHub at https://github.com/mborgerson/xemu . Contributions are welcome! License \u00b6 xemu is free and open source software. Binaries and source of xemu are made available under the terms of the GNU General Public License, version 2. xemu depends on several great open source libraries. Each distribution of xemu includes a LICENSE.txt file which includes specific license information for relevant libraries.","title":"About"},{"location":"about/#system-requirements","text":"xemu runs on Windows, macOS, and Linux systems. An OpenGL 4.0-compatible GPU is required. Most recent integrated GPUs will work. Please note that xemu is an evolving project and, although xemu can run on large number of systems, actual game performance is in flux and will vary based on the characteristics of your system.","title":"System Requirements"},{"location":"about/#open-source-development","text":"xemu is developed on GitHub at https://github.com/mborgerson/xemu . Contributions are welcome!","title":"Open Source Development"},{"location":"about/#license","text":"xemu is free and open source software. Binaries and source of xemu are made available under the terms of the GNU General Public License, version 2. xemu depends on several great open source libraries. Each distribution of xemu includes a LICENSE.txt file which includes specific license information for relevant libraries.","title":"License"},{"location":"building-from-source/","text":"Binaries \u00b6 Users are recommended to use the pre-built xemu binaries . If you would like to build from source however, follow the instructions for your platform below. Windows \u00b6 Windows builds are cross-compiled from Ubuntu. If you would like to build on Windows, you can use WSL2 and Docker. See official Docker documentation for how to get WSL2 and Docker set up. # Clone and build git clone https://github.com/mborgerson/xemu.git docker run --rm -v $PWD /xemu:/xemu -w /xemu \\ -e CCACHE_DIR = /xemu/ccache \\ mborgerson/xemu-ubuntu-win64-cross:latest \\ ./build.sh -p win64-cross # Run ./xemu/dist/xemu.exe macOS \u00b6 First install the Homebrew package manager . # Install dependencies brew update brew install coreutils pkg-config dylibbundler ninja # Clone and build git clone https://github.com/mborgerson/xemu.git cd xemu ./build.sh # Run open ./dist/xemu.app Linux \u00b6 Debian/Ubuntu # Install dependencies sudo apt update sudo apt install git build-essential libsdl2-dev libepoxy-dev libpixman-1-dev libgtk-3-dev libssl-dev libsamplerate0-dev libpcap-dev ninja-build # Clone and build git clone https://github.com/mborgerson/xemu.git cd xemu ./build.sh # Run ./dist/xemu Arch Linux # Install dependencies sudo pacman -S --noconfirm git base-devel sdl2 libepoxy pixman gtk3 openssl libsamplerate libpcap ninja glu # Clone and build git clone https://github.com/mborgerson/xemu.git cd xemu ./build.sh # Run ./dist/xemu Tip: Building with Clang, or another specific compiler If you have multiple toolchains and would like to build with specific one, such as clang, you can specify the compiler and linker through environment variables when invoking build.sh as follows: CC = clang CXX = clang++ CC_LD = lld CXX_LD = lld AR = llvm-ar ./build.sh","title":"Building from Source"},{"location":"building-from-source/#binaries","text":"Users are recommended to use the pre-built xemu binaries . If you would like to build from source however, follow the instructions for your platform below.","title":"Binaries"},{"location":"building-from-source/#windows","text":"Windows builds are cross-compiled from Ubuntu. If you would like to build on Windows, you can use WSL2 and Docker. See official Docker documentation for how to get WSL2 and Docker set up. # Clone and build git clone https://github.com/mborgerson/xemu.git docker run --rm -v $PWD /xemu:/xemu -w /xemu \\ -e CCACHE_DIR = /xemu/ccache \\ mborgerson/xemu-ubuntu-win64-cross:latest \\ ./build.sh -p win64-cross # Run ./xemu/dist/xemu.exe","title":"Windows"},{"location":"building-from-source/#macos","text":"First install the Homebrew package manager . # Install dependencies brew update brew install coreutils pkg-config dylibbundler ninja # Clone and build git clone https://github.com/mborgerson/xemu.git cd xemu ./build.sh # Run open ./dist/xemu.app","title":"macOS"},{"location":"building-from-source/#linux","text":"Debian/Ubuntu # Install dependencies sudo apt update sudo apt install git build-essential libsdl2-dev libepoxy-dev libpixman-1-dev libgtk-3-dev libssl-dev libsamplerate0-dev libpcap-dev ninja-build # Clone and build git clone https://github.com/mborgerson/xemu.git cd xemu ./build.sh # Run ./dist/xemu Arch Linux # Install dependencies sudo pacman -S --noconfirm git base-devel sdl2 libepoxy pixman gtk3 openssl libsamplerate libpcap ninja glu # Clone and build git clone https://github.com/mborgerson/xemu.git cd xemu ./build.sh # Run ./dist/xemu Tip: Building with Clang, or another specific compiler If you have multiple toolchains and would like to build with specific one, such as clang, you can specify the compiler and linker through environment variables when invoking build.sh as follows: CC = clang CXX = clang++ CC_LD = lld CXX_LD = lld AR = llvm-ar ./build.sh","title":"Linux"},{"location":"cli/","text":"These options may be passed to xemu as command line arguments to change startup behavior. Argument Action -full-screen Launch in full screen -dvd_path <iso> Load disc image <iso> -snapshot Discard any writes to the HDD image after exit -config_path <config> Use <config> as config file (usually xemu.ini) Advanced \u00b6 Extra command line arguments are passed as QEMU launch arguments. See QEMU documentation for specifics.","title":"Command Line Arguments"},{"location":"cli/#advanced","text":"Extra command line arguments are passed as QEMU launch arguments. See QEMU documentation for specifics.","title":"Advanced"},{"location":"dashboard/","text":"What is a Dashboard? \u00b6 The dashboard is the application that runs when the original Xbox is started, which presents the main menu interface and allows device configuration and storage management. Default xemu Dashboard \u00b6 The pre-formatted Xbox HDD image , does not contain the official Xbox dashboard. Instead it contains only an unsigned \"dummy\" dashboard, intended to be replaced. It is not strictly required to replace the dummy dashboard. Games can still be launched with the dummy dashboard installed. Because the dummy dashboard is unsigned, you may see an error message when starting xemu with an unmodified retail BIOS image due to the system failing to find a properly signed dashboard. Installing the Official Xbox Dashboard \u00b6 If you would like to install use the official Xbox dashboard, you will first need to download the dashboard files from your real Xbox, then transfer them to the xemu hard disk image. This can easily be done by running an alternative dashboard which exposes an FTP server. See here for more details . Alternative Dashboards \u00b6 It is not required to use the official Xbox dashboard. There are alternatives available, such as the open-source dashboard NevolutionX .","title":"Dashboard"},{"location":"dashboard/#what-is-a-dashboard","text":"The dashboard is the application that runs when the original Xbox is started, which presents the main menu interface and allows device configuration and storage management.","title":"What is a Dashboard?"},{"location":"dashboard/#default-xemu-dashboard","text":"The pre-formatted Xbox HDD image , does not contain the official Xbox dashboard. Instead it contains only an unsigned \"dummy\" dashboard, intended to be replaced. It is not strictly required to replace the dummy dashboard. Games can still be launched with the dummy dashboard installed. Because the dummy dashboard is unsigned, you may see an error message when starting xemu with an unmodified retail BIOS image due to the system failing to find a properly signed dashboard.","title":"Default xemu Dashboard"},{"location":"dashboard/#installing-the-official-xbox-dashboard","text":"If you would like to install use the official Xbox dashboard, you will first need to download the dashboard files from your real Xbox, then transfer them to the xemu hard disk image. This can easily be done by running an alternative dashboard which exposes an FTP server. See here for more details .","title":"Installing the Official Xbox Dashboard"},{"location":"dashboard/#alternative-dashboards","text":"It is not required to use the official Xbox dashboard. There are alternatives available, such as the open-source dashboard NevolutionX .","title":"Alternative Dashboards"},{"location":"disc-images/","text":"xemu requires game discs to be in the form of *.iso disc images. Disclaimer The xemu project does not endorse or promote piracy. We don't permit sharing of games on any channel. The only legal way to acquire these files is to dump them from your real, physical media. Backing Up \u00b6 Fortunately games can be acquired for relatively cheap and it is very easy to create a game backup. You can backup your legally purchased games by: Using your computer to connect via FTP to your real Xbox running a custom dashboard. You can simply insert the disc and transfer the game files from the D directory to your computer. Purchasing and using a special, reflashed DVD drive. More details here . Creating ISOs \u00b6 extract-xiso (Command Line) \u00b6 extract-xiso is a command-line tool to create Xbox-compatible disc images. Warning Use only 32-bit builds of extract-xiso. 64-bit builds can cause subtle issues resulting in dirty disc errors. If you have downloaded your game files over FTP to a directory, the directory structure will look something like this: game/ default.xbe data/ image.tga You can run: extract-xiso -c game game.iso will be produced. This can be used with xemu. Qwix (GUI) \u00b6 Qwix is a popular GUI based tool for creating Xbox compatible ISO images. Warning Qwix is not an open-source project, it is not maintained by the xemu project. Use at own risk. About \"redump\" ISOs \u00b6 \"Redump\" ISOs are a full dump of the game disc. Xbox game discs contain two partitions, the first is a video partition which you can access from a computer or DVD player. This partition usually contains a short video instructing you to insert the disc into an Xbox. The second partition contains the actual game data. A \"redump\" ISO contains both of these partitions. If you have used a customized DVD drive to produce a backup of your game disc, you more than likely have this format. As a sanity check, these images are typically ~7GB in size. xemu is not currently compatible with this format, but you can extract the second partition of the disc image for use with xemu. Unfortunately there is not a GUI-friendly solution for this yet. You will need to use a command-line tool. You can do this with dd or with the extract-xiso utility. Using dd dd if=game-redump.iso of=game.iso skip=387 bs=1M You can then use the game.iso with xemu. Using extract-xiso extract-xiso -r game-redump.iso You can then use game-redump.iso with xemu. Your original will be game-redump.iso.old .","title":"Disc Images"},{"location":"disc-images/#backing-up","text":"Fortunately games can be acquired for relatively cheap and it is very easy to create a game backup. You can backup your legally purchased games by: Using your computer to connect via FTP to your real Xbox running a custom dashboard. You can simply insert the disc and transfer the game files from the D directory to your computer. Purchasing and using a special, reflashed DVD drive. More details here .","title":"Backing Up"},{"location":"disc-images/#creating-isos","text":"","title":"Creating ISOs"},{"location":"disc-images/#extract-xiso-command-line","text":"extract-xiso is a command-line tool to create Xbox-compatible disc images. Warning Use only 32-bit builds of extract-xiso. 64-bit builds can cause subtle issues resulting in dirty disc errors. If you have downloaded your game files over FTP to a directory, the directory structure will look something like this: game/ default.xbe data/ image.tga You can run: extract-xiso -c game game.iso will be produced. This can be used with xemu.","title":"extract-xiso (Command Line)"},{"location":"disc-images/#qwix-gui","text":"Qwix is a popular GUI based tool for creating Xbox compatible ISO images. Warning Qwix is not an open-source project, it is not maintained by the xemu project. Use at own risk.","title":"Qwix (GUI)"},{"location":"disc-images/#about-redump-isos","text":"\"Redump\" ISOs are a full dump of the game disc. Xbox game discs contain two partitions, the first is a video partition which you can access from a computer or DVD player. This partition usually contains a short video instructing you to insert the disc into an Xbox. The second partition contains the actual game data. A \"redump\" ISO contains both of these partitions. If you have used a customized DVD drive to produce a backup of your game disc, you more than likely have this format. As a sanity check, these images are typically ~7GB in size. xemu is not currently compatible with this format, but you can extract the second partition of the disc image for use with xemu. Unfortunately there is not a GUI-friendly solution for this yet. You will need to use a command-line tool. You can do this with dd or with the extract-xiso utility. Using dd dd if=game-redump.iso of=game.iso skip=387 bs=1M You can then use the game.iso with xemu. Using extract-xiso extract-xiso -r game-redump.iso You can then use game-redump.iso with xemu. Your original will be game-redump.iso.old .","title":"About \"redump\" ISOs"},{"location":"download/","text":"Download for Windows \u00b6 Download for Windows Installation \u00b6 Simply download the Zip archive release for Windows, extract the archive to a directory, then double-click on xemu.exe. Download for macOS \u00b6 Download for macOS Compatibility Note: This download is a Universal binary, and will work on both x86-64 and the new Apple M1-based Macs. Installation \u00b6 Simply download the Zip archive release for macOS, extract the archive, then run the application. Optionally drag the xemu app bundle to your Applications folder. Because the app is not signed, you will need to right-click, or hold the control key and click, on the app and in the context menu that appears select Open on first launch. Download for Linux \u00b6 Ubuntu 18.04 and newer \u00b6 Users running recent versions of Ubuntu (18.04 and newer) are recommended to install through the daily build PPA repository. At the command line, run the following: sudo add-apt-repository ppa:mborgerson/xemu sudo apt update sudo apt install xemu You can now launch xemu through your typical launcher, or by typing xemu at the command line. Other Linux Distributions \u00b6 Users running non-Ubuntu distributions are currently recommended to build from source .","title":"Download"},{"location":"download/#download-for-windows","text":"Download for Windows","title":"Download for Windows"},{"location":"download/#installation","text":"Simply download the Zip archive release for Windows, extract the archive to a directory, then double-click on xemu.exe.","title":"Installation"},{"location":"download/#download-for-macos","text":"Download for macOS Compatibility Note: This download is a Universal binary, and will work on both x86-64 and the new Apple M1-based Macs.","title":"Download for macOS"},{"location":"download/#installation_1","text":"Simply download the Zip archive release for macOS, extract the archive, then run the application. Optionally drag the xemu app bundle to your Applications folder. Because the app is not signed, you will need to right-click, or hold the control key and click, on the app and in the context menu that appears select Open on first launch.","title":"Installation"},{"location":"download/#download-for-linux","text":"","title":"Download for Linux"},{"location":"download/#ubuntu-1804-and-newer","text":"Users running recent versions of Ubuntu (18.04 and newer) are recommended to install through the daily build PPA repository. At the command line, run the following: sudo add-apt-repository ppa:mborgerson/xemu sudo apt update sudo apt install xemu You can now launch xemu through your typical launcher, or by typing xemu at the command line.","title":"Ubuntu 18.04 and newer"},{"location":"download/#other-linux-distributions","text":"Users running non-Ubuntu distributions are currently recommended to build from source .","title":"Other Linux Distributions"},{"location":"eeprom/","text":"The EEPROM is a small chip on the Xbox that contains various settings. xemu emulates this EEPROM and the contents are stored in a file which you can select in the xemu Settings dialog. When you start xemu, if you have not provided an desired EEPROM image file a valid EEPROM image will be generated for you. Editing Your EEPROM \u00b6 You can use the XboxEepromEditor ( Windows Download ) to adjust settings in your EEPROM image. Warning xemu doesn't support surround sound at this time, do not enable this in your eeprom.","title":"EEPROM Settings"},{"location":"eeprom/#editing-your-eeprom","text":"You can use the XboxEepromEditor ( Windows Download ) to adjust settings in your EEPROM image. Warning xemu doesn't support surround sound at this time, do not enable this in your eeprom.","title":"Editing Your EEPROM"},{"location":"faq/","text":"Q: Can I get some help? \u00b6 Of course, but first please read through the setup guide . If you still have questions, please read the following FAQs. If you're still having problems, head to #help in the xemu Discord server. Q: I think I've found a bug, what do I do? \u00b6 Join the Discord server and chat about what you're seeing in #general, maybe it's a known issue. We can work together to get it recorded and fixed. Q: Are there system requirements? \u00b6 See here . Q: What BIOS do I need to use? \u00b6 Your MCPX and BIOS dump should be for a 1.0 Xbox. It's suggested that your MCPX dump be 1.0 and that a compatible BIOS image be used (users have reported success with \"COMPLEX 4627\"). Q: Do I need to have an EEPROM file? \u00b6 A default one will be created if you do not provide one. Q: Why am I getting The guest has not initialized the display \u00b6 This is likely due to a mismatch of MCPX and BIOS images, or a corrupt MCPX boot ROM. Q: Why am I getting Please insert an Xbox disc... ? I already loaded an ISO. \u00b6 Try restarting xemu. If you continue to get the message, your ISO may not be dumped in a compatible way. Try using extract-xiso to pack your ISO. Q: Is there a game compatibility list? \u00b6 Yes, visit https://xemu.app Q: Does game x work? \u00b6 Possibly. Check the compatibility list first if you're curious, or try it out for yourself. You are invited to submit a compatibility report too. Q: Does xemu run my game's default.xbe ? \u00b6 No, not directly. xemu emulates the hardware of the system, so you'll need to have a disc image of your game backup. You can use extract-xiso or qwix to create an image. Q: Does xemu support \"redump\" style ISOs? \u00b6 No, not yet. You can however convert a redump style ISO to a compatible ISO. More info here . Q: Why am I getting an Assertion failed! message? \u00b6 When a game exercises a piece of code in xemu that has not yet been implemented or verified, xemu will assert which forces execution to stop. The reason for this is that anything happening beyond that point may be unpredictable and significantly increase the debugging burden. Q: How do I enable widescreen mode? \u00b6 You can change the setting in your dashboard or use the EEPROM editor to enable widescreen. Then select 'Scale (Widescreen 16:9)' in xemu View scaling mode. Note: not all games support widescreen. Q: How can I increase the resolution? \u00b6 For all titles the rendering resolution can be easily scaled by navigating to View\u2192Rendering Scale. For titles that natively support higher resolutions, you can enable the associated mode in your dashboard or by using the EEPROM editor . Q: Are there any plans for a mobile port of xemu? \u00b6 There are currently no plans for a mobile port of xemu on iOS or Android, the emulator hasn't reached the performance necessary to run well on iOS or Android at this time. Q: Can xemu load an Xbox game disc from my computer's DVD drive? \u00b6 Generally, no. You will need to create a backup of your game disc. Please see here for more information about creating and using disc images. Q: Why does xemu crash when I enable Surround Sound in my EEPROM? \u00b6 This is because Surround Sound isn't implemented in xemu yet, please disable this in your EEPROM if you have it enabled.","title":"FAQ"},{"location":"faq/#q-can-i-get-some-help","text":"Of course, but first please read through the setup guide . If you still have questions, please read the following FAQs. If you're still having problems, head to #help in the xemu Discord server.","title":"Q: Can I get some help?"},{"location":"faq/#q-i-think-ive-found-a-bug-what-do-i-do","text":"Join the Discord server and chat about what you're seeing in #general, maybe it's a known issue. We can work together to get it recorded and fixed.","title":"Q: I think I've found a bug, what do I do?"},{"location":"faq/#q-are-there-system-requirements","text":"See here .","title":"Q: Are there system requirements?"},{"location":"faq/#q-what-bios-do-i-need-to-use","text":"Your MCPX and BIOS dump should be for a 1.0 Xbox. It's suggested that your MCPX dump be 1.0 and that a compatible BIOS image be used (users have reported success with \"COMPLEX 4627\").","title":"Q: What BIOS do I need to use?"},{"location":"faq/#q-do-i-need-to-have-an-eeprom-file","text":"A default one will be created if you do not provide one.","title":"Q: Do I need to have an EEPROM file?"},{"location":"faq/#q-why-am-i-getting-the-guest-has-not-initialized-the-display","text":"This is likely due to a mismatch of MCPX and BIOS images, or a corrupt MCPX boot ROM.","title":"Q: Why am I getting The guest has not initialized the display"},{"location":"faq/#q-why-am-i-getting-please-insert-an-xbox-disc-i-already-loaded-an-iso","text":"Try restarting xemu. If you continue to get the message, your ISO may not be dumped in a compatible way. Try using extract-xiso to pack your ISO.","title":"Q: Why am I getting Please insert an Xbox disc...? I already loaded an ISO."},{"location":"faq/#q-is-there-a-game-compatibility-list","text":"Yes, visit https://xemu.app","title":"Q: Is there a game compatibility list?"},{"location":"faq/#q-does-game-x-work","text":"Possibly. Check the compatibility list first if you're curious, or try it out for yourself. You are invited to submit a compatibility report too.","title":"Q: Does game x  work?"},{"location":"faq/#q-does-xemu-run-my-games-defaultxbe","text":"No, not directly. xemu emulates the hardware of the system, so you'll need to have a disc image of your game backup. You can use extract-xiso or qwix to create an image.","title":"Q: Does xemu run my game's default.xbe?"},{"location":"faq/#q-does-xemu-support-redump-style-isos","text":"No, not yet. You can however convert a redump style ISO to a compatible ISO. More info here .","title":"Q: Does xemu support \"redump\" style ISOs?"},{"location":"faq/#q-why-am-i-getting-an-assertion-failed-message","text":"When a game exercises a piece of code in xemu that has not yet been implemented or verified, xemu will assert which forces execution to stop. The reason for this is that anything happening beyond that point may be unpredictable and significantly increase the debugging burden.","title":"Q: Why am I getting an Assertion failed! message?"},{"location":"faq/#q-how-do-i-enable-widescreen-mode","text":"You can change the setting in your dashboard or use the EEPROM editor to enable widescreen. Then select 'Scale (Widescreen 16:9)' in xemu View scaling mode. Note: not all games support widescreen.","title":"Q: How do I enable widescreen mode?"},{"location":"faq/#q-how-can-i-increase-the-resolution","text":"For all titles the rendering resolution can be easily scaled by navigating to View\u2192Rendering Scale. For titles that natively support higher resolutions, you can enable the associated mode in your dashboard or by using the EEPROM editor .","title":"Q: How can I increase the resolution?"},{"location":"faq/#q-are-there-any-plans-for-a-mobile-port-of-xemu","text":"There are currently no plans for a mobile port of xemu on iOS or Android, the emulator hasn't reached the performance necessary to run well on iOS or Android at this time.","title":"Q: Are there any plans for a mobile port of xemu?"},{"location":"faq/#q-can-xemu-load-an-xbox-game-disc-from-my-computers-dvd-drive","text":"Generally, no. You will need to create a backup of your game disc. Please see here for more information about creating and using disc images.","title":"Q: Can xemu load an Xbox game disc from my computer's DVD drive?"},{"location":"faq/#q-why-does-xemu-crash-when-i-enable-surround-sound-in-my-eeprom","text":"This is because Surround Sound isn't implemented in xemu yet, please disable this in your EEPROM if you have it enabled.","title":"Q: Why does xemu crash when I enable Surround Sound in my EEPROM?"},{"location":"ftp/","text":"HDD Access via FTP \u00b6 If you have an alternative dashboard that runs an FTP server (as almost all replacement dashboards do), you can easily connect to that FTP server to read or write files on the virtual hard disk. Step 1: Enable user networking \u00b6 In xemu, open the Network window by navigating to Machine \u2192 Network . If networking is currently enabled, click Disable . From the \"Attached To\" combo box, select \"NAT\", then click Enable . Step 2: Forward port 21 \u00b6 Because xemu is configured to use \"user networking,\" we must configure xemu to forward FTP traffic on the host machine to the internal network. There is not a fancy GUI to do this yet, but we can easily do this using the monitor. In xemu, open the Monitor window by navigating to Debug \u2192 Monitor . In the box at the bottom of the Monitor window, paste the following command and press Enter : hostfwd_add xemu-netdev tcp:127.0.0.1:2121-:21 Now xemu will begin listening on TCP port 2121 for new connections, and forward that traffic to the internal network. Step 3: Launch your alternative dashboard from disc \u00b6 Assuming you have a copy of your alternative dashboard in the form of an ISO image, load the disc image. You may need to reset the system to get it to load. Double check the networking settings for your dashboard to make sure that it is configured to use DHCP. See NevolutionX for a FOSS alternative dashboard that supports FTP here . Step 4: Connect using your FTP client \u00b6 The Filezilla FTP client is recommended. It is an open-source client available for all major platforms. If you would prefer to use another client, look for the respective settings in your client mentioned in this section. Now, assuming that you are using Filezilla, start the client. Let's first create a new \"Site\" by navigating to File \u2192 Site Manager , then in the \"Site Manager\" window, click the New Site button. Enter \"xemu\" for the site name For \"Host\" enter 127.0.0.1 and for \"Port\" enter 2121 For \"Encryption\" select \"Only use plain FTP (insecure)\" For \"Logon Type\" select \"Normal\" Enter the appropriate \"User\" and \"Password\" (typically xbox for both) Navigate to the \"Transfer Settings\" tab and select \"Active\" Check \"Limit number of simultaneous connections\" and set Max Connections to 1 Click OK when you are finished We must configure one more additional setting. Navigate to the settings window via Edit \u2192 Settings... On the left-hand side, navigate to Connection \u2192 FTP \u2192 Active mode In the \"Active mode IP\" group, select \"Use the following IP address:\" and enter 10.0.2.2 Uncheck \"Don't use external IP address on local connections.\" Click OK when you are finished You can now open the \"Site Manager\" window again, select \"xemu\", and click the Connect button. More details about the FTP protocol for the curious... FTP has two modes: passive and active. Passive mode involves the client first connecting to the server for control and then again on another port other for data. The client first connects, then the server gives it another address and port to connect to for data. The first problem with this is that the server reports to the client the only IP address that it knows (10.0.2.15) which is not correct for our needs--we need 127.0.0.1. That's alright because we can override this in Filezilla. The second problem is that we don't know which port the server is going to choose, so we can't forward it ahead of time. In active mode, the client first connects to the server, then the server connects to the client! The client needs to give the IP address for the server to connect to. By default, it will give your computer's IP address, but the guest cannot connect to using that IP. So instead we need to override this setting and provide the IP address that the guest should connect to to actually connect to the host, which is 10.0.2.2. Note: To prevent interference with other FTP servers that you might connect to, you may want to adjust your settings and disable the \"Active mode IP\" override when you have finished transferring files.","title":"HDD Access via FTP"},{"location":"ftp/#hdd-access-via-ftp","text":"If you have an alternative dashboard that runs an FTP server (as almost all replacement dashboards do), you can easily connect to that FTP server to read or write files on the virtual hard disk.","title":"HDD Access via FTP"},{"location":"ftp/#step-1-enable-user-networking","text":"In xemu, open the Network window by navigating to Machine \u2192 Network . If networking is currently enabled, click Disable . From the \"Attached To\" combo box, select \"NAT\", then click Enable .","title":"Step 1: Enable user networking"},{"location":"ftp/#step-2-forward-port-21","text":"Because xemu is configured to use \"user networking,\" we must configure xemu to forward FTP traffic on the host machine to the internal network. There is not a fancy GUI to do this yet, but we can easily do this using the monitor. In xemu, open the Monitor window by navigating to Debug \u2192 Monitor . In the box at the bottom of the Monitor window, paste the following command and press Enter : hostfwd_add xemu-netdev tcp:127.0.0.1:2121-:21 Now xemu will begin listening on TCP port 2121 for new connections, and forward that traffic to the internal network.","title":"Step 2: Forward port 21"},{"location":"ftp/#step-3-launch-your-alternative-dashboard-from-disc","text":"Assuming you have a copy of your alternative dashboard in the form of an ISO image, load the disc image. You may need to reset the system to get it to load. Double check the networking settings for your dashboard to make sure that it is configured to use DHCP. See NevolutionX for a FOSS alternative dashboard that supports FTP here .","title":"Step 3: Launch your alternative dashboard from disc"},{"location":"ftp/#step-4-connect-using-your-ftp-client","text":"The Filezilla FTP client is recommended. It is an open-source client available for all major platforms. If you would prefer to use another client, look for the respective settings in your client mentioned in this section. Now, assuming that you are using Filezilla, start the client. Let's first create a new \"Site\" by navigating to File \u2192 Site Manager , then in the \"Site Manager\" window, click the New Site button. Enter \"xemu\" for the site name For \"Host\" enter 127.0.0.1 and for \"Port\" enter 2121 For \"Encryption\" select \"Only use plain FTP (insecure)\" For \"Logon Type\" select \"Normal\" Enter the appropriate \"User\" and \"Password\" (typically xbox for both) Navigate to the \"Transfer Settings\" tab and select \"Active\" Check \"Limit number of simultaneous connections\" and set Max Connections to 1 Click OK when you are finished We must configure one more additional setting. Navigate to the settings window via Edit \u2192 Settings... On the left-hand side, navigate to Connection \u2192 FTP \u2192 Active mode In the \"Active mode IP\" group, select \"Use the following IP address:\" and enter 10.0.2.2 Uncheck \"Don't use external IP address on local connections.\" Click OK when you are finished You can now open the \"Site Manager\" window again, select \"xemu\", and click the Connect button. More details about the FTP protocol for the curious... FTP has two modes: passive and active. Passive mode involves the client first connecting to the server for control and then again on another port other for data. The client first connects, then the server gives it another address and port to connect to for data. The first problem with this is that the server reports to the client the only IP address that it knows (10.0.2.15) which is not correct for our needs--we need 127.0.0.1. That's alright because we can override this in Filezilla. The second problem is that we don't know which port the server is going to choose, so we can't forward it ahead of time. In active mode, the client first connects to the server, then the server connects to the client! The client needs to give the IP address for the server to connect to. By default, it will give your computer's IP address, but the guest cannot connect to using that IP. So instead we need to override this setting and provide the IP address that the guest should connect to to actually connect to the host, which is 10.0.2.2. Note: To prevent interference with other FTP servers that you might connect to, you may want to adjust your settings and disable the \"Active mode IP\" override when you have finished transferring files.","title":"Step 4: Connect using your FTP client"},{"location":"input/","text":"Built with SDL2, xemu supports virtually all gamepads. Connect up to 4 controllers at any time, just like a real Xbox. Notes & FAQ There is currently no interface within xemu to adjust the keybindings. Hot plugging works on Windows and Linux. It is broken on macOS. There is currently no interface to add/remove memory cards. USB passthru is not supported yet. Only the Xbox controller is emulated. There is not (yet) support for other controllers like the Steel Batallion. Input not functional on early BIOS revisions Emulated gamepads may be non-functional when using early BIOS revisions (<4627). It is recommended to not use these early BIOS revisions, until this bug is fixed. Popular Gamepads \u00b6 Xbox One, Xbox 360 controllers \u00b6 On Windows and Linux they should be supported out of the box. On macOS you will need to install an additional driver. macOS: 360Controller Original Xbox controllers \u00b6 The original Xbox controllers are USB-compatible and can be connected to a PC with an adapter. Please don't cut original Xbox controller cables to make an adapter. Quality adapters can be purchased on Amazon for about $12 USD or from eBay for about $8 USD, shipped globally. Depending on your platform, you may also need to install additional drivers: Windows: Xb2XInput macOS: 360Controller Linux: Usually supported out of the box (xpad). DualShock 4 controllers \u00b6 Sony DualShock 4 controllers work, out of the box, on all platforms. No additional installation of drivers or configuration is required. Keyboard as Gamepad \u00b6 The keyboard layout for the gamepad is: Keyboard Gamepad Keyboard Gamepad A A BACKSPACE BACK B B RETURN START X X 1 WHITE Y Y 2 BLACK LEFT DPAD_LEFT 3 LSTICK UP DPAD_UP 4 RSTICK RIGHT DPAD_RIGHT 5 GUIDE (xemu Nav) DOWN DPAD_DOWN Left Right W = LTrig O = RTrig E I S F J L D K","title":"Input Devices"},{"location":"input/#popular-gamepads","text":"","title":"Popular Gamepads"},{"location":"input/#xbox-one-xbox-360-controllers","text":"On Windows and Linux they should be supported out of the box. On macOS you will need to install an additional driver. macOS: 360Controller","title":"Xbox One, Xbox 360 controllers"},{"location":"input/#original-xbox-controllers","text":"The original Xbox controllers are USB-compatible and can be connected to a PC with an adapter. Please don't cut original Xbox controller cables to make an adapter. Quality adapters can be purchased on Amazon for about $12 USD or from eBay for about $8 USD, shipped globally. Depending on your platform, you may also need to install additional drivers: Windows: Xb2XInput macOS: 360Controller Linux: Usually supported out of the box (xpad).","title":"Original Xbox controllers"},{"location":"input/#dualshock-4-controllers","text":"Sony DualShock 4 controllers work, out of the box, on all platforms. No additional installation of drivers or configuration is required.","title":"DualShock 4 controllers"},{"location":"input/#keyboard-as-gamepad","text":"The keyboard layout for the gamepad is: Keyboard Gamepad Keyboard Gamepad A A BACKSPACE BACK B B RETURN START X X 1 WHITE Y Y 2 BLACK LEFT DPAD_LEFT 3 LSTICK UP DPAD_UP 4 RSTICK RIGHT DPAD_RIGHT 5 GUIDE (xemu Nav) DOWN DPAD_DOWN Left Right W = LTrig O = RTrig E I S F J L D K","title":"Keyboard as Gamepad"},{"location":"networking/","text":"Networking \u00b6 Xbox networking is fully supported. Connect to other instances of xemu and even real Xboxes, locally or over the Internet. There are three network backends available to choose from in the xemu Network configuration dialog: NAT, UDP Tunnel, and Bridged Adapter. Which one you should select depends on what you'd like to do. Attachments \u00b6 Bridged Adapter \u00b6 Useful for... Connecting to one or more real Xboxes on your local network Connecting to a popular tunneling service such as Xlink Kai In this networking mode, the emulated network device is bridged to one of the network interfaces on your machine. This means that all traffic sent from the emulated network controller will be forwarded to your selected network interface, and xemu can receive traffic incoming on this interface. With this mode you can easily set up a System Link session with a real Xbox by just connecting the Xbox to your computer with an Ethernet cable. Additionally, this mode can be used to connect with tunneling services. UDP Tunnel \u00b6 Useful for... Playing with other xemu users over the Internet In this networking mode, all traffic that would be sent/received by the emulated NIC is simply encapsulated in UDP datagrams and forwarded to a remote host, which could be another instance of xemu or perhaps a real Xbox (see l2tunnel for more information). This is useful for quickly setting up a virtual LAN. The xemu project provides multiple free servers you can use to play with other xemu users. Join the Discord community for more information. NAT \u00b6 Useful for... Providing Internet access to Xbox software Connecting to Xbox software from your host machine In this networking mode, a full TCP/IP stack is running within xemu, and network address translation is used to route packets between the internal network and the outside world. Like a router you may have at home, you can have xemu listen on specific ports and perform 'port forwarding' to the virtual Xbox. This can be used for example to connect to the virtual Xbox's FTP server. Find more info about port forwarding and FTP access here . Troubleshooting \u00b6 System Link session is not joinable \u00b6 Ensure all MAC addresses are unique. If you are using an EEPROM dumped from your real Xbox, xemu and your Xbox will have the same MAC address. You'll need to change one of them. You can blank the EEPROM line in xemu's Settings window to have it generate a new one for you, or you can use the EEPROM editor to change it. Ensure the game versions/regions/updates between the people playing are the same. If you are on Windows, ensure you're using the new npcap , not the older WinPcap. Some Realtek cards have been known to be problematic. Try reinstalling your driver or use an alternative adapter. My network adapter is not listed \u00b6 If you are on Windows, ensure you're using the new npcap , not the older WinPcap. Bridged Adapter Permission Problems \u00b6 Important: You should never need to run xemu as the root user. macOS \u00b6 If you get a permission error when attempting to enable Bridged Adapter, you may need to update the /dev/bpfX permissions on your system. You can work around this by opening a terminal and executing the following command: sudo chown $( whoami ) :admin /dev/bpf* Linux \u00b6 If you get a permission error when attempting to enable Bridged Adapter, you may need to update the executable capabilities to provide raw access to your network interface. You can do so with the following command: sudo setcap cap_net_raw,cap_net_admin = eip ` which xemu `","title":"Networking"},{"location":"networking/#networking","text":"Xbox networking is fully supported. Connect to other instances of xemu and even real Xboxes, locally or over the Internet. There are three network backends available to choose from in the xemu Network configuration dialog: NAT, UDP Tunnel, and Bridged Adapter. Which one you should select depends on what you'd like to do.","title":"Networking"},{"location":"networking/#attachments","text":"","title":"Attachments"},{"location":"networking/#bridged-adapter","text":"Useful for... Connecting to one or more real Xboxes on your local network Connecting to a popular tunneling service such as Xlink Kai In this networking mode, the emulated network device is bridged to one of the network interfaces on your machine. This means that all traffic sent from the emulated network controller will be forwarded to your selected network interface, and xemu can receive traffic incoming on this interface. With this mode you can easily set up a System Link session with a real Xbox by just connecting the Xbox to your computer with an Ethernet cable. Additionally, this mode can be used to connect with tunneling services.","title":"Bridged Adapter"},{"location":"networking/#udp-tunnel","text":"Useful for... Playing with other xemu users over the Internet In this networking mode, all traffic that would be sent/received by the emulated NIC is simply encapsulated in UDP datagrams and forwarded to a remote host, which could be another instance of xemu or perhaps a real Xbox (see l2tunnel for more information). This is useful for quickly setting up a virtual LAN. The xemu project provides multiple free servers you can use to play with other xemu users. Join the Discord community for more information.","title":"UDP Tunnel"},{"location":"networking/#nat","text":"Useful for... Providing Internet access to Xbox software Connecting to Xbox software from your host machine In this networking mode, a full TCP/IP stack is running within xemu, and network address translation is used to route packets between the internal network and the outside world. Like a router you may have at home, you can have xemu listen on specific ports and perform 'port forwarding' to the virtual Xbox. This can be used for example to connect to the virtual Xbox's FTP server. Find more info about port forwarding and FTP access here .","title":"NAT"},{"location":"networking/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"networking/#system-link-session-is-not-joinable","text":"Ensure all MAC addresses are unique. If you are using an EEPROM dumped from your real Xbox, xemu and your Xbox will have the same MAC address. You'll need to change one of them. You can blank the EEPROM line in xemu's Settings window to have it generate a new one for you, or you can use the EEPROM editor to change it. Ensure the game versions/regions/updates between the people playing are the same. If you are on Windows, ensure you're using the new npcap , not the older WinPcap. Some Realtek cards have been known to be problematic. Try reinstalling your driver or use an alternative adapter.","title":"System Link session is not joinable"},{"location":"networking/#my-network-adapter-is-not-listed","text":"If you are on Windows, ensure you're using the new npcap , not the older WinPcap.","title":"My network adapter is not listed"},{"location":"networking/#bridged-adapter-permission-problems","text":"Important: You should never need to run xemu as the root user.","title":"Bridged Adapter Permission Problems"},{"location":"networking/#macos","text":"If you get a permission error when attempting to enable Bridged Adapter, you may need to update the /dev/bpfX permissions on your system. You can work around this by opening a terminal and executing the following command: sudo chown $( whoami ) :admin /dev/bpf*","title":"macOS"},{"location":"networking/#linux","text":"If you get a permission error when attempting to enable Bridged Adapter, you may need to update the executable capabilities to provide raw access to your network interface. You can do so with the following command: sudo setcap cap_net_raw,cap_net_admin = eip ` which xemu `","title":"Linux"},{"location":"required-files/","text":"xemu is a low-level, full-system emulator which emulates the actual hardware of the Xbox; this means that in order to actually run xemu, you must have a copy of the stuff that a real Xbox needs when it turns on: MCPX Boot ROM Image Flash ROM Image (BIOS) Hard Disk Image Unfortunately, distributing some of these items would violate copyright laws, so you'll need to acquire them on your own. Disclaimer The xemu project does not endorse or promote piracy. We don't link to copyrighted files, or discuss how to acquire them. The only legal way to acquire these files is to dump them from your real, physical Xbox . Please don't ask us how to get them. MCPX Boot ROM Image \u00b6 MD5 (mcpx_1.0.bin) = d49c52a4102f6df7bcf8d0617ac475ed If your MCPX dump has an MD5 of 196a5f59a13382c185636e691d6c323d , you dumped it badly and it's a couple of bytes off. It should start with 0x33 0xC0 and end with 0x02 0xEE . Flash ROM Image (BIOS) \u00b6 Xbox compatible BIOS. Just like a real Xbox, running an unmodified retail BIOS will not allow booting unofficial software. People have reported most success using the modified retail \"COMPLEX 4627\" BIOS. Hard Disk Image \u00b6 You can use a pre-built 8G Xbox HDD image, free of any copyrighted content, and only containing a dummy dashboard. Download Pre-formatted Xbox Hard Disk Image Note By design, this particular drive image does not contain the official Xbox dashboard, but instead contains only an unsigned dummy dashboard. More information Alternative Options Alternative 1: Image your real Xbox HDD This is the most authentic way to do it. Unlock your drive, connect it to a computer, and dd the entire contents of the drive straight to a file. This file can be used as-is with xemu. Alternative 2: Build a new HDD image from scratch You can also create an Xbox hard-disk image using XboxHDM. Directions on how to do this can be found here .","title":"Required Files"},{"location":"required-files/#mcpx-boot-rom-image","text":"MD5 (mcpx_1.0.bin) = d49c52a4102f6df7bcf8d0617ac475ed If your MCPX dump has an MD5 of 196a5f59a13382c185636e691d6c323d , you dumped it badly and it's a couple of bytes off. It should start with 0x33 0xC0 and end with 0x02 0xEE .","title":"MCPX Boot ROM Image"},{"location":"required-files/#flash-rom-image-bios","text":"Xbox compatible BIOS. Just like a real Xbox, running an unmodified retail BIOS will not allow booting unofficial software. People have reported most success using the modified retail \"COMPLEX 4627\" BIOS.","title":"Flash ROM Image (BIOS)"},{"location":"required-files/#hard-disk-image","text":"You can use a pre-built 8G Xbox HDD image, free of any copyrighted content, and only containing a dummy dashboard. Download Pre-formatted Xbox Hard Disk Image Note By design, this particular drive image does not contain the official Xbox dashboard, but instead contains only an unsigned dummy dashboard. More information Alternative Options Alternative 1: Image your real Xbox HDD This is the most authentic way to do it. Unlock your drive, connect it to a computer, and dd the entire contents of the drive straight to a file. This file can be used as-is with xemu. Alternative 2: Build a new HDD image from scratch You can also create an Xbox hard-disk image using XboxHDM. Directions on how to do this can be found here .","title":"Hard Disk Image"},{"location":"serial-port/","text":"Xbox Development Kits came with a serial port for debugging, likewise xemu can also support a serial port. Simply add -device lpc47m157 to the command line launch arguments. You can then route the serial port to various devices, for example you can send it the console with -serial stdio or to a socket with -serial tcp:127.0.0.1:5558 . See QEMU documentation for more details.","title":"Serial Port"},{"location":"snapshots/","text":"Snapshots , also often called Save States , are a representation of the entire machine state which can be saved or restored at any time. With snapshots you can virtually eliminate the need to rely on in-game checkpoints to save your progress. Save a snapshot, and load it up again later and it's as if you had just kept on playing. Warning: Please be aware that snapshots are a brand new feature. While this feature works reliably in my testing, there may be some bugs. There is not a convenient interface yet, and there are some caveats to be aware of. Saving and restoring snapshots is currently done using the Monitor. After you have launched your game in xemu, open the Monitor window by navigating to Debug \u2192 Monitor . Save a snapshot: Enter the command savevm my-snapshot , where my-snapshot is a name you can give to this snapshot List snapshots: Enter the command info snapshots Restore a snapshot: Enter the command loadvm my-snapshot Delete a snapshot: Enter the command delvm my-snapshot Snapshots are saved to the hard disk image that you started xemu with. Important Notes \u00b6 Before restoring a snapshot, you should: Load your game disc image as normal. Loading a snapshot will not re-mount the game disc, so if you load a snapshot and the game then tries to read from disc, it will fail. Launch xemu, load your game disc, then restore the snapshot. Connect controllers to match the saved configuration. For instance: if there was a controller connected to Port 1 when the snapshot was created, make sure there is a controller connected to Port 1 before loading the snapshot. If this configuration does not match, an error message will be displayed and the machine will be paused. Simply connect the appropriate controllers, load the snapshot again, and enter cont in the monitor to continue).","title":"Snapshots (Save States)"},{"location":"snapshots/#important-notes","text":"Before restoring a snapshot, you should: Load your game disc image as normal. Loading a snapshot will not re-mount the game disc, so if you load a snapshot and the game then tries to read from disc, it will fail. Launch xemu, load your game disc, then restore the snapshot. Connect controllers to match the saved configuration. For instance: if there was a controller connected to Port 1 when the snapshot was created, make sure there is a controller connected to Port 1 before loading the snapshot. If this configuration does not match, an error message will be displayed and the machine will be paused. Simply connect the appropriate controllers, load the snapshot again, and enter cont in the monitor to continue).","title":"Important Notes"},{"location":"troubleshooting/","text":"Frequently Asked Questions \u00b6 Please check the list of frequently asked questions . Black Screen / Failed Load / Dirty Disc \u00b6 Check your disc backup and verify that your backup is correct. Some games are susceptible to cache problems. Try clearing your cache, or simply try with a blank HDD image. Enabling Surround Sound in your EEPROM \u00b6 Surround Sound isn't supported in xemu yet, you should disable this in your EEPROM if you have enabled it. Windows Performance Considerations \u00b6 Powersave vs Performance Power Management Profile \u00b6 Ensure your computer is using a Performance power management profile. If you are using a laptop, connect your AC adapter to prevent throttling. Background Processes \u00b6 Ensure any background processes are not consuming your system resources by checking the system task manager. Integrated vs Discrete GPU \u00b6 In some systems you may have both integrated and discrete GPUs. By default, xemu will request the high-performance discrete GPU. However, system configuration and your graphics driver ultimately decide which GPU xemu is initialized with. In Windows, you can specify which GPU should be used for a particular application by navigating to Display settings \u2192 Graphics settings . You can confirm which GPU xemu is actually using by looking at the \"xemu.log\" file. Nvidia Settings \u00b6 It is recommended to disable \"Multi-threaded Optimizations\" in the nVidia Control Panel. This feature has been known to negatively impact xemu performance. Linux Performance Considerations \u00b6 CPU Performance Scaling \u00b6 You may want to check that your CPU scaling governor is set to performance . In a terminal enter the following command to see current governor state: cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor If you see powersave printed, you may wish to switch to the performance profile. To select the performance profile: echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor Switchroot \u00b6 If you are running switchroot Linux on your Nintendo Switch, you can install xemu from the PPA as described in in the Download page. However, when running xemu you may see the following error: dbus[12047]: arguments to dbus_message_new_method_call() were incorrect, assertion \"path != NULL\" failed in file ../../../dbus/dbus-message.c line 1362. This is normally a bug in some application using the D-Bus library. D-Bus not built with -rdynamic so unable to print a backtrace To fix this you can build and install SDL from source: sudo apt install cmake build-essential git clone https://github.com/libsdl-org/SDL && cd SDL mkdir build && cd build cmake .. make -j4 sudo make install Then launch xemu LD_LIBRARY_PATH=/usr/local/lib xemu","title":"Troubleshooting"},{"location":"troubleshooting/#frequently-asked-questions","text":"Please check the list of frequently asked questions .","title":"Frequently Asked Questions"},{"location":"troubleshooting/#black-screen-failed-load-dirty-disc","text":"Check your disc backup and verify that your backup is correct. Some games are susceptible to cache problems. Try clearing your cache, or simply try with a blank HDD image.","title":"Black Screen / Failed Load / Dirty Disc"},{"location":"troubleshooting/#enabling-surround-sound-in-your-eeprom","text":"Surround Sound isn't supported in xemu yet, you should disable this in your EEPROM if you have enabled it.","title":"Enabling Surround Sound in your EEPROM"},{"location":"troubleshooting/#windows-performance-considerations","text":"","title":"Windows Performance Considerations"},{"location":"troubleshooting/#powersave-vs-performance-power-management-profile","text":"Ensure your computer is using a Performance power management profile. If you are using a laptop, connect your AC adapter to prevent throttling.","title":"Powersave vs Performance Power Management Profile"},{"location":"troubleshooting/#background-processes","text":"Ensure any background processes are not consuming your system resources by checking the system task manager.","title":"Background Processes"},{"location":"troubleshooting/#integrated-vs-discrete-gpu","text":"In some systems you may have both integrated and discrete GPUs. By default, xemu will request the high-performance discrete GPU. However, system configuration and your graphics driver ultimately decide which GPU xemu is initialized with. In Windows, you can specify which GPU should be used for a particular application by navigating to Display settings \u2192 Graphics settings . You can confirm which GPU xemu is actually using by looking at the \"xemu.log\" file.","title":"Integrated vs Discrete GPU"},{"location":"troubleshooting/#nvidia-settings","text":"It is recommended to disable \"Multi-threaded Optimizations\" in the nVidia Control Panel. This feature has been known to negatively impact xemu performance.","title":"Nvidia Settings"},{"location":"troubleshooting/#linux-performance-considerations","text":"","title":"Linux Performance Considerations"},{"location":"troubleshooting/#cpu-performance-scaling","text":"You may want to check that your CPU scaling governor is set to performance . In a terminal enter the following command to see current governor state: cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor If you see powersave printed, you may wish to switch to the performance profile. To select the performance profile: echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor","title":"CPU Performance Scaling"},{"location":"troubleshooting/#switchroot","text":"If you are running switchroot Linux on your Nintendo Switch, you can install xemu from the PPA as described in in the Download page. However, when running xemu you may see the following error: dbus[12047]: arguments to dbus_message_new_method_call() were incorrect, assertion \"path != NULL\" failed in file ../../../dbus/dbus-message.c line 1362. This is normally a bug in some application using the D-Bus library. D-Bus not built with -rdynamic so unable to print a backtrace To fix this you can build and install SDL from source: sudo apt install cmake build-essential git clone https://github.com/libsdl-org/SDL && cd SDL mkdir build && cd build cmake .. make -j4 sudo make install Then launch xemu LD_LIBRARY_PATH=/usr/local/lib xemu","title":"Switchroot"}]}